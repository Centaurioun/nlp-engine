
name: Windows Create Released Asset

on:
  release:
    types:
      - created

jobs:
  build_executable:
    name: Windows Create NLP-ENGINE
    runs-on: windows-latest

    env:
      VCPKG_DEFAULT_TRIPLET: x64-windows

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Vcpkg bootstrap Windows
        run: bootstrap-vcpkg.bat
        working-directory: vcpkg

      - name: Install ICU
        run: vcpkg install
        working-directory: vcpkg

      - name: List $RUNNER_WORKSPACE before build
        run: find $RUNNER_WORKSPACE
        shell: bash

      - name: Make build directory
        run: mkdir build

      - name: Generate Solution Windows
        run: cmake -B build -A Win32 -DCMAKE_BUILD_TYPE=Release -DVCPKG_BUILD_TYPE=release -DCMAKE_TOOLCHAIN_FILE='${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake'

      - name: Cmake Build all targets Windows
        run: cmake --build build --config Release --target nlp

      - uses: shogo82148/actions-upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: "./bin/Release/nlp.exe"
          asset_name: "nlpw.exe"

      - uses: shogo82148/actions-upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: "./vcpkg/buildtrees/icu/x64-windows-rel/lib/icudt69.dll"
          asset_name: "icudt69.dll"

      - uses: shogo82148/actions-upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: "./vcpkg/buildtrees/icu/x64-windows-rel/lib/icuin69.dll"
          asset_name: "icuin69.dll"

      - uses: shogo82148/actions-upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: "./vcpkg/buildtrees/icu/x64-windows-rel/lib/icuuc69.dll"
          asset_name: "icuuc69.dll"