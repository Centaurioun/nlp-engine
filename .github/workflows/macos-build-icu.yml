
name: MacOS Create Released Asset

on:
  release:
    types:
      - created
      
jobs:
  build_executable:
    name: MacOS Create NLP-ENGINE
    runs-on: macos-latest

    env:
      VCPKG_DEFAULT_TRIPLET: x64-osx

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Vcpkg bootstrap Shell
        run: ./bootstrap-vcpkg.sh
        shell: bash
        working-directory: vcpkg

      - name: Mac Install Brew
        run: brew install automake

      - name: Install ICU
        run: vcpkg install
        working-directory: vcpkg

      - name: Make build directory
        run: mkdir build

      - name: Generate Solution MacOs
        run: cmake -DCMAKE_BUILD_TYPE=Release -DVCPKG_BUILD_TYPE=release -DCMAKE_PREFIX_PATH=/usr/local/opt/icu4c -B build -S . -DCMAKE_CXX_FLAGS=-std=c++11

      - name: Cmake Build all targets Linux
        run: cmake --build build/ --target all

      - name: Upload files
        uses: actions/upload-artifact@v3
        with:
          name: nlpm
          path: |
            ${{ github.workspace }}/bin/nlp.exe
            ${{ github.workspace }}/vcpkg_installed/x64-osx/lib/libicutu.a
            ${{ github.workspace }}/vcpkg_installed/x64-osx/lib/libicuuc.a

  zip_files:
    needs: build_executable
    name: Zip Executable Files
    runs-on: ubuntu-latest

    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          path: ${{ github.workspace }}

      - name: List $RUNNER_WORKSPACE before build
        run: find $RUNNER_WORKSPACE
        shell: bash

      - name: Zip nlp and icu files
        uses: papeloto/action-zip@v1
        with:
          files: nlpm/bin/nlp.exe nlpm/vcpkg_installed/x64-osx/lib/libicutu.a nlpm/vcpkg_installed/x64-osx/lib/libicuuc.a
          dest: nlpm.zip
          
      - name: Upload zip artifact
        uses: actions/upload-artifact@v3
        with:
          name: nlpm
          path: ${{ github.workspace }}/nlpm.zip
        
      - name: Attach Zip to Release
        uses: fnkr/github-action-ghr@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GHR_PATH: nlpm.zip
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}